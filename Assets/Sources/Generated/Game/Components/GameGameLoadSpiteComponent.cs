//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Game.LoadSpite gameLoadSpite { get { return (Game.LoadSpite)GetComponent(GameComponentsLookup.GameLoadSpite); } }
    public bool hasGameLoadSpite { get { return HasComponent(GameComponentsLookup.GameLoadSpite); } }

    public void AddGameLoadSpite(string newName) {
        var index = GameComponentsLookup.GameLoadSpite;
        var component = (Game.LoadSpite)CreateComponent(index, typeof(Game.LoadSpite));
        component.name = newName;
        AddComponent(index, component);
    }

    public void ReplaceGameLoadSpite(string newName) {
        var index = GameComponentsLookup.GameLoadSpite;
        var component = (Game.LoadSpite)CreateComponent(index, typeof(Game.LoadSpite));
        component.name = newName;
        ReplaceComponent(index, component);
    }

    public void RemoveGameLoadSpite() {
        RemoveComponent(GameComponentsLookup.GameLoadSpite);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameLoadSpite;

    public static Entitas.IMatcher<GameEntity> GameLoadSpite {
        get {
            if (_matcherGameLoadSpite == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameLoadSpite);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameLoadSpite = matcher;
            }

            return _matcherGameLoadSpite;
        }
    }
}
