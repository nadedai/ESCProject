//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentLookupGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public static class GameComponentsLookup {

    public const int GameChange = 0;
    public const int GameDestory = 1;
    public const int GameDetectionSameItem = 2;
    public const int GameEliminate = 3;
    public const int GameFirstCreateEffect = 4;
    public const int GameGameBoard = 5;
    public const int GameGameBoardItem = 6;
    public const int GameGetSameColor = 7;
    public const int GameItemEffectState = 8;
    public const int GameItemIndex = 9;
    public const int GameJudgeFormation = 10;
    public const int GameLoadPrefab = 11;
    public const int GameLoadSpite = 12;
    public const int GameMoveable = 13;
    public const int GameMoveComplete = 14;
    public const int GameScore = 15;
    public const int GameDestoryListener = 16;
    public const int GameItemIndexListener = 17;
    public const int GameLoadPrefabListener = 18;
    public const int GameLoadSpiteListener = 19;
    public const int GameScoreListener = 20;
    public const int InterationExampleDirection = 21;
    public const int InterationExampleMoveComplete = 22;
    public const int InterationExampleMove = 23;
    public const int InterationExamplePosition = 24;
    public const int InterationExampleSprite = 25;
    public const int InterationExampleView = 26;
    public const int Log = 27;
    public const int MultiReactiveDestoryed = 28;
    public const int MultiReactiveNameComponet = 29;
    public const int MultiReactiveView = 30;
    public const int MultiReactiveNameComponetListener = 31;

    public const int TotalComponents = 32;

    public static readonly string[] componentNames = {
        "GameChange",
        "GameDestory",
        "GameDetectionSameItem",
        "GameEliminate",
        "GameFirstCreateEffect",
        "GameGameBoard",
        "GameGameBoardItem",
        "GameGetSameColor",
        "GameItemEffectState",
        "GameItemIndex",
        "GameJudgeFormation",
        "GameLoadPrefab",
        "GameLoadSpite",
        "GameMoveable",
        "GameMoveComplete",
        "GameScore",
        "GameDestoryListener",
        "GameItemIndexListener",
        "GameLoadPrefabListener",
        "GameLoadSpiteListener",
        "GameScoreListener",
        "InterationExampleDirection",
        "InterationExampleMoveComplete",
        "InterationExampleMove",
        "InterationExamplePosition",
        "InterationExampleSprite",
        "InterationExampleView",
        "Log",
        "MultiReactiveDestoryed",
        "MultiReactiveNameComponet",
        "MultiReactiveView",
        "MultiReactiveNameComponetListener"
    };

    public static readonly System.Type[] componentTypes = {
        typeof(Game.ChangeComponent),
        typeof(Game.DestoryComponent),
        typeof(Game.DetectionSameItem),
        typeof(Game.Eliminate),
        typeof(Game.FirstCreateEffect),
        typeof(Game.GameBoardComponent),
        typeof(Game.GameBoardItemComponent),
        typeof(Game.GetSameColorComponent),
        typeof(Game.ItemEffectState),
        typeof(Game.ItemIndex),
        typeof(Game.JudgeFormation),
        typeof(Game.LoadPrefab),
        typeof(Game.LoadSpite),
        typeof(Game.MoveableComponent),
        typeof(Game.MoveCompleteComponent),
        typeof(Game.Score),
        typeof(GameDestoryListenerComponent),
        typeof(GameItemIndexListenerComponent),
        typeof(GameLoadPrefabListenerComponent),
        typeof(GameLoadSpiteListenerComponent),
        typeof(GameScoreListenerComponent),
        typeof(InterationExample.DirectionComponent),
        typeof(InterationExample.MoveCompleteComponent),
        typeof(InterationExample.MoveComponent),
        typeof(InterationExample.PositionComponent),
        typeof(InterationExample.SpriteComponent),
        typeof(InterationExample.ViewComponent),
        typeof(LogComponent),
        typeof(MultiReactive.DestoryedComponent),
        typeof(MultiReactive.NameComponet),
        typeof(MultiReactive.ViewComponent),
        typeof(MultiReactiveNameComponetListenerComponent)
    };
}
